A1,"工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 設計智能合約程式介面
    - 詳細閱讀 EIP-1056，確認12項定義並整理成智能合約程式介面。
    - 設計智能合約內容，確保符合EIP-1056定義。

2. 開發簽章驗證功能
    - 完成secp256r1橢圓區線加密的簽章驗證函數。
    - 測試驗證函數的正確性，以確保合約能正確執行。

3. 部署智能合約至區塊鏈
    - 選擇適合的區塊鏈網絡進行部署作業。
    - 確認智能合約成功部署，並取得區塊鏈瀏覽器連結。

","

工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 智能合約介面測試
    - 使用新增的智能合約程式介面，進行測試以確保所有功能正常運作。
    - 仔細檢查12項EIP-1056定義的功能是否都有被正確實現。

2. secp256r1簽章驗證測試
    - 從公開資料集中隨機挑選十份資料進行簽章驗證測試。
    - 製作測試報告，詳細記錄每份資料的驗證結果。

3. 區塊鏈瀏覽器連結
    - 在瀏覽器上輸入智能合約地址，確認智能合約已經成功部署。
    - 核對智能合約的交易歷史以確保部署正確。

","

工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 延伸功能加強
    - 考慮將更多功能整合至智能合約程式介面，以提升合約的彈性。
    - 修改現有的功能以符合最新的安全標準要求。

2. 安全漏洞掃描
    - 使用安全漏洞掃描工具，對智能合約進行安全性檢測。
    - 修改潛在的安全漏洞以提高合約的安全性。

3. 最終測試與驗收
    - 模擬不同情況進行最終測試，以驗證智能合約的穩定性和可靠性。
    - 確保智能合約符合所有功能和簽章驗證的要求，並準備完成報告提交查核。"
A1,"工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 設計智能合約程式介面
    - 詳細閱讀 EIP-1056，確認12項定義並整理成智能合約程式介面。
    - 設計智能合約內容，確保符合EIP-1056定義。

2. 開發簽章驗證功能
    - 完成secp256r1橢圓區線加密的簽章驗證函數。
    - 測試驗證函數的正確性，以確保合約能正確執行。

3. 部署智能合約至區塊鏈
    - 選擇適合的區塊鏈網絡進行部署作業。
    - 確認智能合約成功部署，並取得區塊鏈瀏覽器連結。

","

工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 智能合約介面測試
    - 使用新增的智能合約程式介面，進行測試以確保所有功能正常運作。
    - 仔細檢查12項EIP-1056定義的功能是否都有被正確實現。

2. secp256r1簽章驗證測試
    - 從公開資料集中隨機挑選十份資料進行簽章驗證測試。
    - 製作測試報告，詳細記錄每份資料的驗證結果。

3. 區塊鏈瀏覽器連結
    - 在瀏覽器上輸入智能合約地址，確認智能合約已經成功部署。
    - 核對智能合約的交易歷史以確保部署正確。

","

工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 延伸功能加強
    - 考慮將更多功能整合至智能合約程式介面，以提升合約的彈性。
    - 修改現有的功能以符合最新的安全標準要求。

2. 安全漏洞掃描
    - 使用安全漏洞掃描工具，對智能合約進行安全性檢測。
    - 修改潛在的安全漏洞以提高合約的安全性。

3. 最終測試與驗收
    - 模擬不同情況進行最終測試，以驗證智能合約的穩定性和可靠性。
    - 確保智能合約符合所有功能和簽章驗證的要求，並準備完成報告提交查核。"
A1,"工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 設計智能合約程式介面
    - 詳細閱讀 EIP-1056，確認12項定義並整理成智能合約程式介面。
    - 設計智能合約內容，確保符合EIP-1056定義。

2. 開發簽章驗證功能
    - 完成secp256r1橢圓區線加密的簽章驗證函數。
    - 測試驗證函數的正確性，以確保合約能正確執行。

3. 部署智能合約至區塊鏈
    - 選擇適合的區塊鏈網絡進行部署作業。
    - 確認智能合約成功部署，並取得區塊鏈瀏覽器連結。

","

工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 智能合約介面測試
    - 使用新增的智能合約程式介面，進行測試以確保所有功能正常運作。
    - 仔細檢查12項EIP-1056定義的功能是否都有被正確實現。

2. secp256r1簽章驗證測試
    - 從公開資料集中隨機挑選十份資料進行簽章驗證測試。
    - 製作測試報告，詳細記錄每份資料的驗證結果。

3. 區塊鏈瀏覽器連結
    - 在瀏覽器上輸入智能合約地址，確認智能合約已經成功部署。
    - 核對智能合約的交易歷史以確保部署正確。

","

工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 延伸功能加強
    - 考慮將更多功能整合至智能合約程式介面，以提升合約的彈性。
    - 修改現有的功能以符合最新的安全標準要求。

2. 安全漏洞掃描
    - 使用安全漏洞掃描工具，對智能合約進行安全性檢測。
    - 修改潛在的安全漏洞以提高合約的安全性。

3. 最終測試與驗收
    - 模擬不同情況進行最終測試，以驗證智能合約的穩定性和可靠性。
    - 確保智能合約符合所有功能和簽章驗證的要求，並準備完成報告提交查核。"
A1,"工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 設計智能合約程式介面
    - 詳細閱讀 EIP-1056，確認12項定義並整理成智能合約程式介面。
    - 設計智能合約內容，確保符合EIP-1056定義。

2. 開發簽章驗證功能
    - 完成secp256r1橢圓區線加密的簽章驗證函數。
    - 測試驗證函數的正確性，以確保合約能正確執行。

3. 部署智能合約至區塊鏈
    - 選擇適合的區塊鏈網絡進行部署作業。
    - 確認智能合約成功部署，並取得區塊鏈瀏覽器連結。

","

工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 智能合約介面測試
    - 使用新增的智能合約程式介面，進行測試以確保所有功能正常運作。
    - 仔細檢查12項EIP-1056定義的功能是否都有被正確實現。

2. secp256r1簽章驗證測試
    - 從公開資料集中隨機挑選十份資料進行簽章驗證測試。
    - 製作測試報告，詳細記錄每份資料的驗證結果。

3. 區塊鏈瀏覽器連結
    - 在瀏覽器上輸入智能合約地址，確認智能合約已經成功部署。
    - 核對智能合約的交易歷史以確保部署正確。

","

工作記錄
查核點編號： A1 智能合約開發
記錄時間： 113年4-6月

工作流程與步驟：

1. 延伸功能加強
    - 考慮將更多功能整合至智能合約程式介面，以提升合約的彈性。
    - 修改現有的功能以符合最新的安全標準要求。

2. 安全漏洞掃描
    - 使用安全漏洞掃描工具，對智能合約進行安全性檢測。
    - 修改潛在的安全漏洞以提高合約的安全性。

3. 最終測試與驗收
    - 模擬不同情況進行最終測試，以驗證智能合約的穩定性和可靠性。
    - 確保智能合約符合所有功能和簽章驗證的要求，並準備完成報告提交查核。"
A2,"工作記錄
查核點編號： A2 平台API設計
記錄時間： 113年7-9月

工作流程與步驟：

1. API端點設計
    - 確認需要包含的端點：addSigner、verifyClaim、query功能
    - 設計每個端點的資源、請求方法和回應資料格式

2. 安全機制規劃
    - 研究避免重入攻擊的方法，保障系統安全
    - 確保機制不會影響API的效能

3. Express框架應用
    - 學習如何使用Express框架來設計API
    - 應用Express框架中的middleware來實現安全機制",
A2,"工作記錄
查核點編號： A2 平台API設計
記錄時間： 113年7-9月

工作流程與步驟：

1. API端點設計
    - 確認需要包含的端點：addSigner、verifyClaim、query功能
    - 設計每個端點的資源、請求方法和回應資料格式

2. 安全機制規劃
    - 研究避免重入攻擊的方法，保障系統安全
    - 確保機制不會影響API的效能

3. Express框架應用
    - 學習如何使用Express框架來設計API
    - 應用Express框架中的middleware來實現安全機制",
A2,"工作記錄
查核點編號： A2 平台API設計
記錄時間： 113年7-9月

工作流程與步驟：

1. API端點設計
    - 確認需要包含的端點：addSigner、verifyClaim、query功能
    - 設計每個端點的資源、請求方法和回應資料格式

2. 安全機制規劃
    - 研究避免重入攻擊的方法，保障系統安全
    - 確保機制不會影響API的效能

3. Express框架應用
    - 學習如何使用Express框架來設計API
    - 應用Express框架中的middleware來實現安全機制",
